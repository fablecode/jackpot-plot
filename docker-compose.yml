networks:
  jackpotplot_net:
    driver: bridge

services:

  # Logging 
  seq:
    image: datalust/seq:latest
    ports:
        - 6341:80
    environment:
        ACCEPT_EULA: "Y"
    networks:
      - jackpotplot_net

  # Event Bus (RabbitMQ in this case)
  rabbitmq:
    image: rabbitmq:management
    ports:
      - "15672:15672"  # RabbitMQ Management UI
      - "5672:5672"    # RabbitMQ AMQP protocol
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=jackpotplot
    volumes:
        - ./docker/configuration/rabbitmq/data/:/var/lib/rabbitmq/
        - ./docker/configuration/rabbitmq/log/:/var/log/rabbitmq
        - ./docker/configuration/rabbitmq/definitions.json:/opt/rabbitmq/definitions.json  # Custom RabbitMQ config
        - ./docker/configuration/rabbitmq/rabbitmq.config:/etc/rabbitmq/rabbitmq.config  # Custom RabbitMQ config
    networks:
      - jackpotplot_net

  # Ocelot Gateway
  gateway:
    build:
      dockerfile: ./src/Presentation/Gateway/JackpotPlot.Gateway/Dockerfile
    ports:
      - "8080:8080" # Expose Ocelot Gateway
    depends_on:
      - lottery-service
      - prediction-service
  
  # Lottery Service Database
  lottery-db:
    image: postgres
    environment:
        - POSTGRES_USER=lotteryuser
        - POSTGRES_PASSWORD=lotterypassword
        - POSTGRES_DB=lottery_db
    ports:
      - "5433:5432"
    networks:
      - jackpotplot_net
    volumes:
        - lottery_db_data:/var/lib/postgresql/data

  # Lottery Service
  lottery-service:
      build: 
          dockerfile: ./src/Presentation/Services/Lottery.API/Dockerfile
      environment: 
          - ConnectionStrings__LotteryApiDatabase=Host=lottery-db;Port=5432;Database=lottery_db;User Id=lotteryuser;Password=lotterypassword;
          - RabbitMqSettings__Host=rabbitmq
          - RabbitMqSettings__Port=5672
          - RabbitMqSettings__Username=admin
          - RabbitMqSettings__Password=jackpotplot
          - RabbitMqSettings__Exchange=lottery-exchange
      ports:
          - "8080:8080"
      depends_on:
          - lottery-db
          - rabbitmq
      networks:
          - jackpotplot_net

  # Lottery Data Collector Service
  lottery-data-collector-service:
      build: 
          dockerfile: ./src/Presentation/BackgroundServices/LotteryDataCollector.Service/Dockerfile
      environment: 
          - RabbitMqSettings__Host=rabbitmq
          - RabbitMqSettings__Port=5672
          - RabbitMqSettings__Username=admin
          - RabbitMqSettings__Password=jackpotplot
          - RabbitMqSettings__Exchange=lottery-exchange
      depends_on: 
          - rabbitmq
      networks:
          - jackpotplot_net
  
  # Prediction Service Database
  prediction-db:
      image: postgres
      environment:
        - POSTGRES_USER=predictionuser
        - POSTGRES_PASSWORD=predictionpassword
        - POSTGRES_DB=prediction_db
      ports:
        - "5434:5432"
      networks:
        - jackpotplot_net
      volumes:
      - prediction_db_data:/var/lib/postgresql/data

  # Prediction Service
  prediction-service:
      build: 
          dockerfile: ./src/Presentation/Services/Prediction.API/Dockerfile
      environment: 
          - ConnectionStrings__PredictionApiDatabase=Host=prediction-db;Port=5432;Database=prediction_db;User Id=predictionuser;Password=predictionpassword;
          - RabbitMqSettings__Host=rabbitmq
          - RabbitMqSettings__Port=5672
          - RabbitMqSettings__Username=admin
          - RabbitMqSettings__Password=jackpotplot
          - RabbitMqSettings__Exchange=lottery-exchange
      ports:
          - "8081:8081"
      depends_on:
          - prediction-db
          - rabbitmq
      networks:
          - jackpotplot_net

  # Angular Client
  angular-client:
      build:
          context: ./src/Presentation/Clients/Web/jackpot-plot-web
          dockerfile: Dockerfile
      ports:
        - "4200:80"
      depends_on:
        - lottery-service
        - prediction-service

volumes:
  lottery_db_data:
  user_db_data:
  prediction_db_data:
  notification_db_data:
